name: UiKit CD

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  github:
    name: Create a new Github release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v20
    - name: Get Changelog Entry
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v1.0.1
      with:
        version: ${{ github.ref }}
        path: ./CHANGELOG.md
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog_reader.outputs.log_entry }} # This pulls from the GET CHANGELOG ENTRY step above, referencing it's ID to get its outputs object, which include a `log_entry`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        draft: false
        prerelease: false
  npm:
    name: Deploy Package on NPM
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules-12.x
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
        registry-url: https://registry.npmjs.org/
    - name: Use PNPM
      run: curl -L https://unpkg.com/@pnpm/self-installer | node
    - name: Install dependencies
      run: pnpm install --shamefully-hoist
    - name: Build package
      run: pnpm run build
    - name: Publish package
      run: pnpm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
  storybook:
    name: Deploy Storybook on Github Pages
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules-12.x
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Use PNPM
      run: curl -L https://unpkg.com/@pnpm/self-installer | node
    - name: Install dependencies
      run: pnpm install --shamefully-hoist
    - name: Build storybook
      run: pnpm run build:storybook
    - name: Publish storybook
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GITHUB_MINDSERS_TOKEN }}
        publish_dir: ./storybook-static
